// <auto-generated />
using System;
using InformationProcessSupport.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InformationProcessSupport.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230625114013_AddAuthModel")]
    partial class AddAuthModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InformationProcessSupport.Data.Models.CameraActionsModel", b =>
                {
                    b.Property<int>("CameraActionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CameraActionsId"));

                    b.Property<TimeSpan?>("CameraOperationTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("CameraTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CameraTurnOnTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatisticId")
                        .HasColumnType("int");

                    b.HasKey("CameraActionsId");

                    b.HasIndex("StatisticId");

                    b.ToTable("CameraActionEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.ChannelModel", b =>
                {
                    b.Property<int>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelId"));

                    b.Property<decimal>("AlternateKey")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("CategoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChannelId");

                    b.HasAlternateKey("AlternateKey");

                    b.ToTable("ChannelEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.GroupModel", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<decimal?>("AlternateKey")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("GroupEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.MicrophoneActionsModel", b =>
                {
                    b.Property<int>("MicrophoneTimeEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MicrophoneTimeEntityId"));

                    b.Property<TimeSpan?>("MicrophoneOperatingTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("MicrophoneTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MicrophoneTurnOnTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatisticId")
                        .HasColumnType("int");

                    b.HasKey("MicrophoneTimeEntityId");

                    b.HasIndex("StatisticId");

                    b.ToTable("MicrophoneActionEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.ScheduleModel", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTimeTheSubject")
                        .HasColumnType("time");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTimeTheSubject")
                        .HasColumnType("time");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("ChannelId")
                        .IsUnique()
                        .HasFilter("[ChannelId] IS NOT NULL");

                    b.HasIndex("GroupId")
                        .IsUnique()
                        .HasFilter("[GroupId] IS NOT NULL");

                    b.ToTable("ScheduleEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.SelfDeafenedActionsModel", b =>
                {
                    b.Property<int>("SelfDeafenedActionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelfDeafenedActionsId"));

                    b.Property<TimeSpan?>("SelfDeafenedOperationTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("SelfDeafenedTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SelfDeafenedTurnOnTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatisticId")
                        .HasColumnType("int");

                    b.HasKey("SelfDeafenedActionsId");

                    b.HasIndex("StatisticId");

                    b.ToTable("SelfDeafenedActionsEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.StatisticModel", b =>
                {
                    b.Property<int>("StatisticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatisticId"));

                    b.Property<string>("Attendance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ConnectionTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StatisticId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("UserId");

                    b.ToTable("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.StreamActionsModel", b =>
                {
                    b.Property<int>("StreamActionsEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StreamActionsEntityId"));

                    b.Property<int>("StatisticId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StreamOperationTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("StreamTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StreamTurnOnTime")
                        .HasColumnType("datetime2");

                    b.HasKey("StreamActionsEntityId");

                    b.HasIndex("StatisticId");

                    b.ToTable("StreamActionEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.UserAuthenticationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAuthenticationEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<decimal>("AlternateKey")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.CameraActionsModel", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Models.StatisticModel", "StatisticEntities")
                        .WithMany("CameraActionsEntity")
                        .HasForeignKey("StatisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.MicrophoneActionsModel", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Models.StatisticModel", "StatisticEntities")
                        .WithMany("MicrophoneActionsEntity")
                        .HasForeignKey("StatisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.ScheduleModel", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Models.ChannelModel", "ChannelEntity")
                        .WithOne("ScheduleEntity")
                        .HasForeignKey("InformationProcessSupport.Data.Models.ScheduleModel", "ChannelId");

                    b.HasOne("InformationProcessSupport.Data.Models.GroupModel", "GroupEntity")
                        .WithOne("ScheduleEntity")
                        .HasForeignKey("InformationProcessSupport.Data.Models.ScheduleModel", "GroupId");

                    b.Navigation("ChannelEntity");

                    b.Navigation("GroupEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.SelfDeafenedActionsModel", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Models.StatisticModel", "StatisticEntities")
                        .WithMany("SelfDeafenedActionsEntities")
                        .HasForeignKey("StatisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.StatisticModel", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Models.ChannelModel", "ChannelEntity")
                        .WithMany("StatisticEntities")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InformationProcessSupport.Data.Models.ScheduleModel", "ScheduleEntity")
                        .WithMany("StatisticsEntity")
                        .HasForeignKey("ScheduleId");

                    b.HasOne("InformationProcessSupport.Data.Models.UserModel", "UserEntity")
                        .WithMany("StatisticsEntity")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelEntity");

                    b.Navigation("ScheduleEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.StreamActionsModel", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Models.StatisticModel", "StatisticEntities")
                        .WithMany("StreamActionsEntity")
                        .HasForeignKey("StatisticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.UserModel", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Models.GroupModel", "GroupEntity")
                        .WithMany("UserEntity")
                        .HasForeignKey("GroupId");

                    b.Navigation("GroupEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.ChannelModel", b =>
                {
                    b.Navigation("ScheduleEntity")
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.GroupModel", b =>
                {
                    b.Navigation("ScheduleEntity")
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.ScheduleModel", b =>
                {
                    b.Navigation("StatisticsEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.StatisticModel", b =>
                {
                    b.Navigation("CameraActionsEntity");

                    b.Navigation("MicrophoneActionsEntity");

                    b.Navigation("SelfDeafenedActionsEntities");

                    b.Navigation("StreamActionsEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Models.UserModel", b =>
                {
                    b.Navigation("StatisticsEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
