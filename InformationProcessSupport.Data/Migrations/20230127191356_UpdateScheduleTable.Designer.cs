// <auto-generated />
using System;
using InformationProcessSupport.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InformationProcessSupport.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230127191356_UpdateScheduleTable")]
    partial class UpdateScheduleTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InformationProcessSupport.Data.Channels.ChannelEntity", b =>
                {
                    b.Property<int>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChannelId"));

                    b.Property<decimal>("AlternateKey")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("CategoryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChannelId");

                    b.HasAlternateKey("AlternateKey");

                    b.ToTable("ChannelsEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Groups.GroupEntity", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<decimal>("AlternateKey")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.ToTable("GroupEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.ScheduleOfSubjects.ScheduleEntity", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int");

                    b.Property<int>("DayOfTheWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTimeTheSubject")
                        .HasColumnType("time");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTimeTheSubject")
                        .HasColumnType("time");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.HasIndex("ChannelId")
                        .IsUnique()
                        .HasFilter("[ChannelId] IS NOT NULL");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("ScheduleEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Statistics.StatisticEntity", b =>
                {
                    b.Property<int>("StatisticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatisticId"));

                    b.Property<string>("Attendance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChannelId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ConnectionTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StatisticId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("UserId");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.CameraActions.CameraActionsEntity", b =>
                {
                    b.Property<int>("CameraActionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CameraActionsId"));

                    b.Property<TimeSpan?>("CameraOperationTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("CameraTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CameraTurnOnTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatistisId")
                        .HasColumnType("int");

                    b.HasKey("CameraActionsId");

                    b.HasIndex("StatistisId");

                    b.ToTable("CameraActionsEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.MicrophoneActions.MicrophoneActionsEntity", b =>
                {
                    b.Property<int>("MicrophoneTimeEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MicrophoneTimeEntityId"));

                    b.Property<TimeSpan?>("MicrophoneOperatingTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("MicrophoneTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MicrophoneTurnOnTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatistisId")
                        .HasColumnType("int");

                    b.HasKey("MicrophoneTimeEntityId");

                    b.HasIndex("StatistisId");

                    b.ToTable("MicrophoneActionsEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.SelfDeafenedActions.SelfDeafenedActionsEntity", b =>
                {
                    b.Property<int>("SelfDeafenedActionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelfDeafenedActionsId"));

                    b.Property<TimeSpan?>("SelfDeafenedOperationTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("SelfDeafenedTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SelfDeafenedTurnOnTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatistisId")
                        .HasColumnType("int");

                    b.HasKey("SelfDeafenedActionsId");

                    b.HasIndex("StatistisId");

                    b.ToTable("SelfDeafenedActionsEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.StreamActions.StreamActionsEntity", b =>
                {
                    b.Property<int>("StreamActionsEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StreamActionsEntityId"));

                    b.Property<int>("StatistisId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("StreamOperationTime")
                        .HasColumnType("time");

                    b.Property<DateTime?>("StreamTurnOffTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StreamTurnOnTime")
                        .HasColumnType("datetime2");

                    b.HasKey("StreamActionsEntityId");

                    b.HasIndex("StatistisId");

                    b.ToTable("StreamActionsEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Users.UserEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<decimal>("AlternateKey")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("GroupId");

                    b.ToTable("UsersEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.ScheduleOfSubjects.ScheduleEntity", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Channels.ChannelEntity", "ChannelEntity")
                        .WithOne("ScheduleEntity")
                        .HasForeignKey("InformationProcessSupport.Data.ScheduleOfSubjects.ScheduleEntity", "ChannelId");

                    b.HasOne("InformationProcessSupport.Data.Groups.GroupEntity", "GroupEntity")
                        .WithOne("ScheduleEntity")
                        .HasForeignKey("InformationProcessSupport.Data.ScheduleOfSubjects.ScheduleEntity", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelEntity");

                    b.Navigation("GroupEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Statistics.StatisticEntity", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Channels.ChannelEntity", "ChannelEntity")
                        .WithMany("StatisticEntities")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InformationProcessSupport.Data.Users.UserEntity", "UserEntity")
                        .WithMany("StatisticsEntity")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChannelEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.CameraActions.CameraActionsEntity", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Statistics.StatisticEntity", "StatisticEntities")
                        .WithMany("CameraActionsEntity")
                        .HasForeignKey("StatistisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.MicrophoneActions.MicrophoneActionsEntity", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Statistics.StatisticEntity", "StatisticEntities")
                        .WithMany("MicrophoneActionsEntity")
                        .HasForeignKey("StatistisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.SelfDeafenedActions.SelfDeafenedActionsEntity", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Statistics.StatisticEntity", "StatisticEntities")
                        .WithMany("SelfDeafenedActionsEntities")
                        .HasForeignKey("StatistisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.TimeOfActionsInTheChannel.StreamActions.StreamActionsEntity", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Statistics.StatisticEntity", "StatisticEntities")
                        .WithMany("StreamActionsEntity")
                        .HasForeignKey("StatistisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Users.UserEntity", b =>
                {
                    b.HasOne("InformationProcessSupport.Data.Groups.GroupEntity", "GroupEntity")
                        .WithMany("UserEntity")
                        .HasForeignKey("GroupId");

                    b.Navigation("GroupEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Channels.ChannelEntity", b =>
                {
                    b.Navigation("ScheduleEntity")
                        .IsRequired();

                    b.Navigation("StatisticEntities");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Groups.GroupEntity", b =>
                {
                    b.Navigation("ScheduleEntity")
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Statistics.StatisticEntity", b =>
                {
                    b.Navigation("CameraActionsEntity");

                    b.Navigation("MicrophoneActionsEntity");

                    b.Navigation("SelfDeafenedActionsEntities");

                    b.Navigation("StreamActionsEntity");
                });

            modelBuilder.Entity("InformationProcessSupport.Data.Users.UserEntity", b =>
                {
                    b.Navigation("StatisticsEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
