@page "/schedule"
<PageTitle>Расписание</PageTitle>


@*<DisplayScheduleForm></DisplayScheduleForm>
<DisplayGroupForm></DisplayGroupForm>*@
<div class="btn-group">
    @foreach (var item in types)
    {
        if (Array.IndexOf(types, item) == selected)
        {
            <button class="btn btn-primary">@GetNameFragment(item)</button>
        }
        else
        {
            <button class="btn btn-secondary" @onclick="() => selected = Array.IndexOf(types, item)">@GetNameFragment(item)</button>
        }
    }
</div>

@GetRenderFragment(types[selected])

@code {
    RenderFragment GetRenderFragment(Type type)
    {
        RenderFragment renderFragment = renderTreeBuilder =>
        {
            renderTreeBuilder.OpenComponent(0, type);
            renderTreeBuilder.CloseComponent();
        };
        return renderFragment;
    }

    string GetNameFragment(Type type)
    {
        return type.Name switch
             {
                "DisplayScheduleForm" => "Распирасание",
                "DisplayGroupForm" => "Группа",
                _ => "Error"
            };
    }

    int selected;
    ComponentBase[] components = { new DisplayScheduleForm(), new DisplayGroupForm() };
    Type[] types => components.Select(c => c.GetType()).ToArray();
}